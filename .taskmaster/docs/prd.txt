<context>
# 概述
本系统是一个综合性的培训管理平台，旨在为零售商户和客户经理提供全面的培训资源和智能化学习支持。系统解决了传统培训方式效率低下、内容分散、效果难以评估等问题，通过PC端管理平台和微信小程序双端架构，为不同角色用户提供统一的培训管理和学习体验。

核心价值：
- 统一的培训资源管理平台
- 智能化的AI问答支持系统
- 完整的问卷调研和数据分析功能
- 多端同步的用户体验

目标用户：
- 管理员：负责系统管理、内容发布、数据分析
- 客户经理：通过小程序学习培训内容、参与问卷调研
- 零售商户：通过小程序访问培训资源、获取AI支持

# 核心功能
## 1. 用户认证与管理模块
### 1.1 多角色用户登录认证
- 支持管理员PC端登录（账号密码）
- 支持小程序端微信授权登录
- JWT Token会话管理
- 登录安全机制（失败次数限制、密码强度要求）
- 不同角色权限控制

### 1.2 用户信息管理
- 用户列表分页查询
- 用户信息CRUD操作
- 用户角色权限分配
- 批量用户导入功能

## 2. 培训内容管理与访问模块
### 2.1 培训资料管理（PC端）
- 视频文件上传（支持阿里云OSS）
- "四会"文档上传和管理
- 内容分类标签管理
- 内容审核和发布状态控制
- 内容统计和访问分析

### 2.2 培训内容访问（小程序端）
- 培训视频列表浏览
- 在线视频播放功能
- 文档在线查看功能
- 学习进度跟踪
- 收藏和历史记录功能

## 3. AI智能问答模块
### 3.1 智能问答系统
- 集成DeepSeek API大语言模型
- 向量数据库知识检索（基于"四会"文档）
- 联网搜索功能（第三方搜索引擎API）
- 上下文记忆的对话能力
- 问答历史记录管理

### 3.2 知识库管理
- "四会"文档向量化处理
- 知识片段分割和索引
- 知识库更新和维护
- 搜索结果相关性优化

## 4. 问卷管理与分析模块
### 4.1 问卷设计与发布
- 可视化问卷设计器
- 多种问题类型支持（单选、多选、文本、评分）
- 问卷模板管理
- 目标用户群体选择
- 问卷发布和截止时间控制

### 4.2 问卷数据收集与分析
- 小程序端问卷填写界面
- 实时数据收集和统计
- 基础统计分析（选项分布、平均分等）
- AI辅助的文本分析和关键词提取
- 趋势分析和报表生成
- 数据导出功能

# 用户体验
## 用户角色
### 管理员
- 主要使用PC端管理平台
- 负责系统配置、内容管理、数据分析
- 需要直观的管理界面和丰富的统计功能

### 客户经理 & 零售商户
- 主要使用微信小程序
- 重视便捷的学习体验和即时的问答支持
- 需要简洁友好的移动端界面

## 关键用户流程
### 管理员工作流程
1. 登录PC端管理平台
2. 上传培训视频和文档
3. 创建和发布问卷
4. 查看学习数据和问卷统计
5. 分析用户行为和学习效果

### 用户学习流程
1. 微信小程序授权登录
2. 浏览培训内容列表
3. 观看视频或阅读文档
4. 使用AI问答获取帮助
5. 填写相关问卷
6. 查看个人学习记录

## UI/UX设计考虑
- PC端：专业的管理界面，数据可视化
- 小程序端：简洁的卡片式设计，符合微信生态
- 响应式设计，适配不同设备
- 无障碍访问支持
</context>

<PRD>
# 技术架构
## 系统组件
### 后端架构
- **框架**: Spring Boot 3.x
- **构建工具**: Maven 3.9.9
- **数据库**: MySQL 8.0+ (主数据库) + Redis (缓存)
- **向量数据库**: Chroma/Weaviate (知识检索)
- **文件存储**: 阿里云OSS
- **认证**: JWT + Spring Security
- **API文档**: Swagger/OpenAPI 3

### 前端架构
- **PC端**: Vue 3 + Element Plus + TypeScript
- **小程序端**: UniApp + Vue 3 + UniIcons
- **状态管理**: Pinia
- **HTTP客户端**: Axios
- **构建工具**: Vite

### 外部集成
- **AI服务**: DeepSeek API
- **搜索引擎**: 百度搜索API/Google Search API
- **微信**: 微信小程序SDK
- **云存储**: 阿里云OSS SDK

## 数据模型
### 核心实体
```sql
-- 用户表
users (id, username, password, role, wechat_openid, created_at, updated_at)

-- 培训内容表
training_contents (id, title, type, file_url, category, status, created_by, created_at)

-- 问卷表
questionnaires (id, title, description, status, target_audience, deadline, created_by, created_at)

-- 问卷题目表
questions (id, questionnaire_id, type, title, options, required, order_num)

-- 问卷回答表
responses (id, questionnaire_id, user_id, answers, submitted_at)

-- AI对话记录表
ai_conversations (id, user_id, question, answer, context, created_at)

-- 学习记录表
learning_records (id, user_id, content_id, progress, last_accessed)
```

## API设计
### 认证相关
- POST /api/auth/login - 用户登录
- POST /api/auth/wechat-login - 微信小程序登录
- POST /api/auth/refresh - Token刷新

### 用户管理
- GET /api/users - 用户列表
- POST /api/users - 创建用户
- PUT /api/users/{id} - 更新用户
- DELETE /api/users/{id} - 删除用户

### 培训内容
- GET /api/contents - 内容列表
- POST /api/contents - 上传内容
- PUT /api/contents/{id} - 更新内容
- DELETE /api/contents/{id} - 删除内容

### AI问答
- POST /api/ai/chat - 智能问答
- GET /api/ai/history - 对话历史

### 问卷管理
- GET /api/questionnaires - 问卷列表
- POST /api/questionnaires - 创建问卷
- POST /api/questionnaires/{id}/responses - 提交问卷
- GET /api/questionnaires/{id}/analytics - 问卷分析

## 基础设施要求
- **服务器**: 4核8GB内存起步，支持水平扩展
- **数据库**: MySQL主从复制，Redis集群
- **CDN**: 阿里云CDN加速静态资源
- **监控**: 应用性能监控和日志收集
- **部署**: Docker容器化 + Kubernetes编排

# 开发路线图
## 第一阶段：核心基础功能 (MVP)
### 目标：建立基本的用户认证和内容管理能力
#### 后端基础
- Spring Boot项目初始化和基础配置
- 数据库设计和初始化脚本
- 用户认证和JWT实现
- 基础CRUD API开发

#### 前端基础
- PC端管理平台基础框架
- 用户登录和权限管理界面
- 培训内容上传和管理界面
- 小程序基础框架和微信登录

#### 核心功能
- 用户注册、登录、权限管理
- 培训视频和文档上传功能
- 基础的内容浏览功能

## 第二阶段：培训内容完整功能
### 目标：完善培训内容的管理和访问体验
#### 内容管理增强
- 文件上传到阿里云OSS集成
- 内容分类和标签系统
- 内容审核和发布流程
- 学习进度跟踪功能

#### 用户体验优化
- 小程序端视频播放器
- 文档在线查看功能
- 收藏和历史记录功能
- 搜索和筛选功能

## 第三阶段：AI智能问答系统
### 目标：集成AI能力，提供智能化学习支持
#### AI系统集成
- DeepSeek API集成
- 向量数据库搭建
- "四会"文档向量化处理
- 知识检索算法实现

#### 问答功能开发
- 聊天界面开发（PC端和小程序端）
- 上下文记忆功能
- 联网搜索功能集成
- 问答历史管理

## 第四阶段：问卷管理与分析
### 目标：构建完整的调研和数据分析能力
#### 问卷系统开发
- 可视化问卷设计器
- 多种问题类型支持
- 问卷发布和管理功能
- 小程序端问卷填写界面

#### 数据分析功能
- 基础统计分析
- AI辅助文本分析
- 可视化图表展示
- 报表导出功能

## 第五阶段：系统优化和高级功能
### 目标：提升系统性能和用户体验
#### 性能优化
- 缓存策略优化
- 数据库查询优化
- 前端性能优化
- CDN和静态资源优化

#### 高级功能
- 个性化推荐算法
- 多租户支持
- 移动端离线功能
- 高级数据分析和BI

# 逻辑依赖链
## 开发优先级
### 第一优先级（基础设施）
1. **项目初始化和环境配置**
   - Spring Boot项目搭建
   - 数据库设计和创建
   - 基础配置和依赖管理

2. **用户认证系统**
   - JWT认证实现
   - Spring Security配置
   - 用户管理API

3. **基础数据模型**
   - 核心实体类设计
   - 数据库表创建
   - 基础CRUD操作

### 第二优先级（可视化功能）
4. **PC端管理界面**
   - Vue 3 + Element Plus框架搭建
   - 登录界面和主框架
   - 用户管理界面

5. **小程序基础框架**
   - UniApp项目初始化
   - 微信登录集成
   - 基础页面结构

### 第三优先级（核心业务）
6. **培训内容管理**
   - 文件上传功能
   - 阿里云OSS集成
   - 内容CRUD操作

7. **培训内容展示**
   - 小程序端内容列表
   - 视频播放功能
   - 文档查看功能

### 第四优先级（AI功能）
8. **AI问答基础**
   - DeepSeek API集成
   - 基础对话功能
   - 简单的知识检索

9. **向量数据库**
   - 向量数据库搭建
   - 文档向量化处理
   - 知识检索优化

### 第五优先级（高级功能）
10. **问卷系统**
    - 问卷设计和管理
    - 问卷填写功能
    - 基础数据统计

11. **数据分析和优化**
    - 高级统计分析
    - AI辅助分析
    - 性能优化

## 原子化开发策略
- 每个功能模块都能独立开发和测试
- 保持API的向后兼容性
- 采用微服务架构思想，模块间松耦合
- 每个阶段都有可演示的功能

# 风险识别与缓解策略
## 技术挑战
### 1. AI集成复杂性
**风险**: DeepSeek API集成和向量数据库性能问题
**缓解措施**:
- 先实现基础的API调用，再优化向量检索
- 建立API调用监控和限流机制
- 准备备用AI服务提供商

### 2. 小程序审核风险
**风险**: 微信小程序审核可能不通过
**缓解措施**:
- 严格遵循微信小程序开发规范
- 避免敏感内容和功能
- 预留审核周期时间

### 3. 文件存储和带宽成本
**风险**: 大量视频文件导致存储和带宽成本过高
**缓解措施**:
- 实施视频压缩和转码策略
- 使用CDN加速降低带宽成本
- 建立存储容量监控和清理机制

## MVP范围确定
### 最小可行产品包含
- 基础用户登录和权限管理
- 简单的培训内容上传和查看
- 基础的AI问答功能
- 核心的问卷创建和填写功能

### 不包含在MVP中
- 复杂的数据分析和报表
- 高级的个性化推荐
- 离线功能和缓存
- 多租户支持

## 资源约束
### 开发资源
- 后端开发：1-2人
- 前端开发：1-2人
- 测试和运维：1人

### 时间约束
- MVP开发周期：8-12周
- 完整功能开发：16-20周

# 附录
## 技术选型依据
### Spring Boot
- 成熟的Java企业级框架
- 丰富的生态系统和社区支持
- 便于集成各种第三方服务

### Vue 3 + Element Plus
- 现代化的前端框架
- 组件化开发提高效率
- Element Plus提供丰富的企业级组件

### UniApp
- 一套代码多端运行
- 微信小程序官方支持
- 降低开发和维护成本

### MySQL + Redis
- MySQL提供可靠的数据持久化
- Redis提供高性能缓存
- 成熟的数据库解决方案

## 安全考虑
- JWT Token安全机制
- API接口权限控制
- 文件上传安全检查
- 数据传输HTTPS加密
- 用户敏感信息加密存储

## 扩展性考虑
- 微服务架构设计
- 数据库分库分表策略
- 缓存分层设计
- 负载均衡和集群部署
- 监控和日志系统 